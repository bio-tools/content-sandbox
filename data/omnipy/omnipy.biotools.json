{
    "accessibility": "Open access",
    "additionDate": "2023-08-10T08:23:57.988811Z",
    "biotoolsCURIE": "biotools:omnipy",
    "biotoolsID": "omnipy",
    "collectionID": [
        "ELIXIR-NO",
        "ELIXIR-Norway",
        "UiO tools"
    ],
    "cost": "Free of charge",
    "credit": [
        {
            "email": "erin.calhoun@uit.no",
            "name": "Erin Calhoun",
            "note": "Curation of bio.tools record - please contact me with updates/corrections.",
            "orcidid": "https://orcid.org/0009-0003-3752-7156",
            "typeEntity": "Person",
            "typeRole": [
                "Documentor"
            ]
        },
        {
            "email": "sveinugu@gmail.com",
            "name": "Sveinung Gundersen",
            "orcidid": "https://orcid.org/0000-0001-9888-7954",
            "typeEntity": "Person",
            "typeRole": [
                "Developer",
                "Documentor",
                "Maintainer",
                "Primary contact",
                "Support"
            ]
        },
        {
            "fundrefid": "10.13039/501100005416",
            "gridid": "grid.13985.36",
            "name": "The Research Council of Norway",
            "rorid": "00epmv149",
            "typeEntity": "Funding agency"
        },
        {
            "fundrefid": "10.13039/501100005366",
            "gridid": "grid.5510.1",
            "name": "University of Oslo",
            "rorid": "01xtthb56",
            "typeEntity": "Institute",
            "typeRole": [
                "Provider"
            ]
        },
        {
            "name": "Gavin Chait",
            "note": "Contributing to Biohackathon projects (Oct-Nov 2023) related to omnipy",
            "orcidid": "https://orcid.org/0000-0003-3733-6299",
            "typeEntity": "Person",
            "typeRole": [
                "Contributor"
            ]
        },
        {
            "name": "Sebastian Beier",
            "note": "Contributing to Biohackathon projects (Oct-Nov 2023) related to omnipy",
            "orcidid": "https://orcid.org/0000-0002-2177-8781",
            "typeEntity": "Person",
            "typeRole": [
                "Contributor"
            ]
        },
        {
            "name": "Stuart Owen",
            "note": "Contributing to Biohackathon projects (Oct-Nov 2023) related to omnipy",
            "orcidid": "https://orcid.org/0000-0003-2130-0865",
            "typeEntity": "Person",
            "typeRole": [
                "Contributor"
            ]
        },
        {
            "name": "Timo Mühlhaus",
            "note": "Contributing to Biohackathon projects (Oct-Nov 2023) related to omnipy",
            "orcidid": "https://orcid.org/0000-0003-3925-6778",
            "typeEntity": "Person",
            "typeRole": [
                "Contributor"
            ]
        },
        {
            "name": "Ahmed Ghanem",
            "orcidid": "https://orcid.org/0000-0002-2006-4242",
            "typeEntity": "Person",
            "typeRole": [
                "Contributor"
            ]
        },
        {
            "name": "Eivind Hovig",
            "orcidid": "https://orcid.org/0000-0002-9103-1077",
            "typeEntity": "Person",
            "typeRole": [
                "Provider"
            ]
        },
        {
            "name": "Federico Bianchini",
            "orcidid": "https://orcid.org/0000-0002-9016-4820",
            "typeEntity": "Person",
            "typeRole": [
                "Developer"
            ]
        },
        {
            "name": "Jeanne Cheneby",
            "orcidid": "https://orcid.org/0000-0003-4553-3110",
            "typeEntity": "Person",
            "typeRole": [
                "Developer"
            ]
        },
        {
            "name": "Pável Vázquez",
            "orcidid": "https://orcid.org/0000-0003-0471-9517",
            "typeEntity": "Person",
            "typeRole": [
                "Developer",
                "Documentor",
                "Support"
            ]
        },
        {
            "name": "Joshua Baskaran",
            "typeEntity": "Person",
            "typeRole": [
                "Developer"
            ]
        },
        {
            "name": "ELIXIR Norway",
            "typeEntity": "Consortium",
            "typeRole": [
                "Provider"
            ],
            "url": "https://elixir.no"
        }
    ],
    "description": "Omnipy is a Python library for type-driven data wrangling and scalable data flow orchestration. It simplifies creation and deployment of (meta)data transformation processes, emphasizing FAIRification, executable metadata crosswalks and data brokering. Omnipy aids generic data tasks like extraction from multiple sources, (meta)data mapping and systematic data model transformations. Embracing a \"parse, don't validate\" approach, omnipy uses Python type hints and pydantic for data consistency and adherence to specific models. Highly modular, it allows integration of (meta)data transformation steps dependent on software like pandas and R. The architecture supports pluggable execution engines like Prefect, a highly interoperable industry-developed Open Source data flow orchestration engine. Envisioned as a community effort, omnipy aims to offer various import formats and data models (both hierarchical and tabular representations), as well as ontology mapping and semiautomatic data cleaning.",
    "documentation": [
        {
            "type": [
                "API documentation"
            ],
            "url": "https://omnipy.readthedocs.io/en/latest/"
        }
    ],
    "download": [
        {
            "note": "Latest release (still under development)",
            "type": "Source code",
            "url": "https://pypi.org/project/omnipy/#files",
            "version": "0.10.4"
        }
    ],
    "editPermission": {
        "authors": [
            "ELIXIR-NO",
            "UiO",
            "UiT",
            "matus.kalas@uib.no"
        ],
        "type": "group"
    },
    "elixirCommunity": [
        "3D-BioInfo",
        "Federated Human Data",
        "Human Copy Number Variation",
        "Intrinsically Disordered Proteins",
        "Marine Metagenomics",
        "Metabolomics",
        "Microbial Biotechnology",
        "Plant Sciences",
        "Proteomics",
        "Rare Diseases"
    ],
    "elixirNode": [
        "Norway"
    ],
    "function": [
        {
            "input": [
                {
                    "data": {
                        "term": "Database cross-mapping",
                        "uri": "http://edamontology.org/data_0954"
                    }
                },
                {
                    "data": {
                        "term": "Matrix",
                        "uri": "http://edamontology.org/data_2082"
                    }
                },
                {
                    "data": {
                        "term": "Data reference",
                        "uri": "http://edamontology.org/data_2093"
                    },
                    "format": [
                        {
                            "term": "Matrix format",
                            "uri": "http://edamontology.org/format_3033"
                        }
                    ]
                }
            ],
            "note": "Generate initial FAIRtracks tables by applying the model map, mapping FAIRtracks attributes with one or more attributes (columns) in the original table.",
            "operation": [
                {
                    "term": "Aggregation",
                    "uri": "http://edamontology.org/operation_3436"
                },
                {
                    "term": "Mapping",
                    "uri": "http://edamontology.org/operation_2429"
                },
                {
                    "term": "Service invocation",
                    "uri": "http://edamontology.org/operation_3763"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Ontology mapping",
                        "uri": "http://edamontology.org/data_3509"
                    },
                    "format": [
                        {
                            "term": "Matrix format",
                            "uri": "http://edamontology.org/format_3033"
                        }
                    ]
                }
            ]
        },
        {
            "input": [
                {
                    "data": {
                        "term": "Matrix",
                        "uri": "http://edamontology.org/data_2082"
                    }
                }
            ],
            "note": "Data cleanup and transformation.",
            "operation": [
                {
                    "term": "Standardisation and normalisation",
                    "uri": "http://edamontology.org/operation_3435"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Matrix",
                        "uri": "http://edamontology.org/data_2082"
                    }
                }
            ]
        },
        {
            "input": [
                {
                    "data": {
                        "term": "Matrix",
                        "uri": "http://edamontology.org/data_2082"
                    }
                }
            ],
            "note": "Manual mapping of FAIRtracks objects and attributes to corresponding tables and columns in the original data.",
            "operation": [
                {
                    "term": "Mapping",
                    "uri": "http://edamontology.org/operation_2429"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Database cross-mapping",
                        "uri": "http://edamontology.org/data_0954"
                    }
                }
            ]
        },
        {
            "input": [
                {
                    "data": {
                        "term": "Data reference",
                        "uri": "http://edamontology.org/data_2093"
                    },
                    "format": [
                        {
                            "term": "Python script",
                            "uri": "http://edamontology.org/format_3996"
                        }
                    ]
                }
            ],
            "note": "Import diverse data from API endpoints (JSON) and relational databases. Output as JSON files specifying fields from the mapping API or as pandas DataFrames with reference metadata.",
            "operation": [
                {
                    "term": "Data retrieval",
                    "uri": "http://edamontology.org/operation_2422"
                },
                {
                    "term": "Filtering",
                    "uri": "http://edamontology.org/operation_3695"
                },
                {
                    "term": "Formatting",
                    "uri": "http://edamontology.org/operation_0335"
                },
                {
                    "term": "Mapping",
                    "uri": "http://edamontology.org/operation_2429"
                },
                {
                    "term": "Service invocation",
                    "uri": "http://edamontology.org/operation_3763"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Database search results",
                        "uri": "http://edamontology.org/data_2080"
                    },
                    "format": [
                        {
                            "term": "JSON",
                            "uri": "http://edamontology.org/format_3464"
                        }
                    ]
                }
            ]
        },
        {
            "input": [
                {
                    "data": {
                        "term": "Text data",
                        "uri": "http://edamontology.org/data_2526"
                    },
                    "format": [
                        {
                            "term": "Binary format",
                            "uri": "http://edamontology.org/format_2333"
                        },
                        {
                            "term": "GSuite",
                            "uri": "http://edamontology.org/format_3775"
                        },
                        {
                            "term": "JSON",
                            "uri": "http://edamontology.org/format_3464"
                        },
                        {
                            "term": "TSV",
                            "uri": "http://edamontology.org/format_3475"
                        },
                        {
                            "term": "Textual format",
                            "uri": "http://edamontology.org/format_2330"
                        }
                    ]
                }
            ],
            "note": "Import data as files in a supported format. Output as pandas DataFrames with embedded JSON objects/lists and reference metadata.",
            "operation": [
                {
                    "term": "Editing",
                    "uri": "http://edamontology.org/operation_3096"
                },
                {
                    "term": "Format detection",
                    "uri": "http://edamontology.org/operation_3357"
                },
                {
                    "term": "Formatting",
                    "uri": "http://edamontology.org/operation_0335"
                },
                {
                    "term": "Parsing",
                    "uri": "http://edamontology.org/operation_1812"
                },
                {
                    "term": "Splitting",
                    "uri": "http://edamontology.org/operation_3359"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Matrix",
                        "uri": "http://edamontology.org/data_2082"
                    }
                }
            ]
        },
        {
            "operation": [
                {
                    "term": "Format validation",
                    "uri": "http://edamontology.org/operation_0336"
                },
                {
                    "term": "Validation",
                    "uri": "http://edamontology.org/operation_2428"
                }
            ]
        }
    ],
    "homepage": "https://fairtracks.net/fair/#fair-07-transformation",
    "language": [
        "Python"
    ],
    "lastUpdate": "2023-08-15T07:24:18.092241Z",
    "license": "Apache-2.0",
    "link": [
        {
            "note": "Example projects using the omnipy package",
            "type": [
                "Repository"
            ],
            "url": "https://github.com/fairtracks/omnipy_examples"
        },
        {
            "note": "Omnipy was developed as part of the FAIRtracks project",
            "type": [
                "Service"
            ],
            "url": "https://fairtracks.net/"
        },
        {
            "note": "PyPI page for omnipy",
            "type": [
                "Repository"
            ],
            "url": "https://pypi.org/project/omnipy/"
        },
        {
            "note": "The Prefect workflow orchestration platform",
            "type": [
                "Other"
            ],
            "url": "https://www.prefect.io/"
        },
        {
            "type": [
                "Issue tracker",
                "Repository"
            ],
            "url": "https://github.com/fairtracks/omnipy"
        }
    ],
    "maturity": "Emerging",
    "name": "omnipy",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "eca008",
    "relation": [
        {
            "biotoolsID": "pandas",
            "type": "uses"
        }
    ],
    "toolType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Data architecture, analysis and design",
            "uri": "http://edamontology.org/topic_3365"
        },
        {
            "term": "Data identity and mapping",
            "uri": "http://edamontology.org/topic_3345"
        },
        {
            "term": "Data integration and warehousing",
            "uri": "http://edamontology.org/topic_3366"
        },
        {
            "term": "Data mining",
            "uri": "http://edamontology.org/topic_3473"
        },
        {
            "term": "Data quality management",
            "uri": "http://edamontology.org/topic_3572"
        },
        {
            "term": "Data submission, annotation and curation",
            "uri": "http://edamontology.org/topic_0219"
        },
        {
            "term": "Ontology and terminology",
            "uri": "http://edamontology.org/topic_0089"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ],
    "version": [
        "0.10.4"
    ]
}
