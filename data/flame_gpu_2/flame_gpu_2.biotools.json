{
    "accessibility": "Open access",
    "additionDate": "2022-04-22T14:03:52.837417Z",
    "biotoolsCURIE": "biotools:flame_gpu_2",
    "biotoolsID": "flame_gpu_2",
    "collectionID": [
        "PerMedCoE"
    ],
    "cost": "Free of charge",
    "description": "FLAME (Coakley et al., 2012) is an open-source, generic formal framework for agent-based modelling that allows parallelisation using MPI, and developers can use it to create models and tools. Implementing a Flame simulation is done by using finite-state automata with memory (Coakley et al., 2006). This tool has been adapted to be used with distributed GPUs using the OpenCL standard (Richmond et al., 2010). Examples of uses of FLAME range from bioreactor studies (Kaul et al., 2013) to immunogenic studies (Kabiri Chimeh et al., 2019) or also epidermis modelling (Li et al., 2013).",
    "documentation": [
        {
            "type": [
                "API documentation",
                "Quick start guide",
                "User manual"
            ],
            "url": "https://docs.flamegpu.com/"
        }
    ],
    "download": [
        {
            "type": "Source code",
            "url": "https://github.com/FLAMEGPU/FLAMEGPU2/",
            "version": "2.0.0."
        }
    ],
    "editPermission": {
        "type": "public"
    },
    "homepage": "https://flamegpu.com/",
    "lastUpdate": "2022-12-01T19:58:36.686115Z",
    "license": "MIT",
    "name": "Flame GPU 2",
    "owner": "tntiniak",
    "publication": [
        {
            "doi": "10.1109/HPCC.2012.79",
            "metadata": {
                "abstract": "This paper describes the design of an agent-based modelling framework for high performance computing. Rather than a collection of methods that require parallel programming expertise the framework presented allows modellers to concentrate on the model while the framework handles the efficient execution of simulations. The framework uses a state machine based representation of agents that allows a statically calculated optimal ordering of agent execution and parallel communication routines. Some experiments with the current implementation and the results of using a simple communication dominant model for benchmarking performance are reported. The model with half a million agents is used to show that a parallel efficiency of above 80% is achievable when distributed over 432 processors. Future improvements are discussed including data dependency analysis, vector operations over agents, and dynamic task scheduling. Â© 2012 IEEE.",
                "authors": [
                    {
                        "name": "Chin S."
                    },
                    {
                        "name": "Coakley S."
                    },
                    {
                        "name": "Gheorghe M."
                    },
                    {
                        "name": "Greenough C."
                    },
                    {
                        "name": "Holcombe M."
                    },
                    {
                        "name": "Worth D."
                    }
                ],
                "citationCount": 70,
                "date": "2012-12-07T00:00:00Z",
                "journal": "Proceedings of the 14th IEEE International Conference on High Performance Computing and Communications, HPCC-2012 - 9th IEEE International Conference on Embedded Software and Systems, ICESS-2012",
                "title": "Exploitation of high performance computing in the FLAME agent-based simulation framework"
            }
        }
    ],
    "topic": [
        {
            "term": "Immunogenetics",
            "uri": "http://edamontology.org/topic_3930"
        }
    ]
}
